// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/chess.proto

package gen

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpponentType int32

const (
	OpponentType_PLAYER OpponentType = 0
	OpponentType_AGENT  OpponentType = 1
)

// Enum value maps for OpponentType.
var (
	OpponentType_name = map[int32]string{
		0: "PLAYER",
		1: "AGENT",
	}
	OpponentType_value = map[string]int32{
		"PLAYER": 0,
		"AGENT":  1,
	}
)

func (x OpponentType) Enum() *OpponentType {
	p := new(OpponentType)
	*p = x
	return p
}

func (x OpponentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpponentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chess_proto_enumTypes[0].Descriptor()
}

func (OpponentType) Type() protoreflect.EnumType {
	return &file_proto_chess_proto_enumTypes[0]
}

func (x OpponentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OpponentType.Descriptor instead.
func (OpponentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{0}
}

type Color int32

const (
	Color_WHITE Color = 0
	Color_BLACK Color = 1
)

// Enum value maps for Color.
var (
	Color_name = map[int32]string{
		0: "WHITE",
		1: "BLACK",
	}
	Color_value = map[string]int32{
		"WHITE": 0,
		"BLACK": 1,
	}
)

func (x Color) Enum() *Color {
	p := new(Color)
	*p = x
	return p
}

func (x Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Color) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_chess_proto_enumTypes[1].Descriptor()
}

func (Color) Type() protoreflect.EnumType {
	return &file_proto_chess_proto_enumTypes[1]
}

func (x Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Color.Descriptor instead.
func (Color) EnumDescriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{1}
}

type StartGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerName    string                 `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	OpponentType  OpponentType           `protobuf:"varint,2,opt,name=opponent_type,json=opponentType,proto3,enum=chess.OpponentType" json:"opponent_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameRequest) Reset() {
	*x = StartGameRequest{}
	mi := &file_proto_chess_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameRequest) ProtoMessage() {}

func (x *StartGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameRequest.ProtoReflect.Descriptor instead.
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{0}
}

func (x *StartGameRequest) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *StartGameRequest) GetOpponentType() OpponentType {
	if x != nil {
		return x.OpponentType
	}
	return OpponentType_PLAYER
}

type StartGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerId      string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	OpponentId    string                 `protobuf:"bytes,3,opt,name=opponent_id,json=opponentId,proto3" json:"opponent_id,omitempty"`
	Color         Color                  `protobuf:"varint,4,opt,name=color,proto3,enum=chess.Color" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartGameResponse) Reset() {
	*x = StartGameResponse{}
	mi := &file_proto_chess_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameResponse) ProtoMessage() {}

func (x *StartGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameResponse.ProtoReflect.Descriptor instead.
func (*StartGameResponse) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{1}
}

func (x *StartGameResponse) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *StartGameResponse) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *StartGameResponse) GetOpponentId() string {
	if x != nil {
		return x.OpponentId
	}
	return ""
}

func (x *StartGameResponse) GetColor() Color {
	if x != nil {
		return x.Color
	}
	return Color_WHITE
}

type MoveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlayerId      string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	FromSquare    string                 `protobuf:"bytes,3,opt,name=from_square,json=fromSquare,proto3" json:"from_square,omitempty"`
	ToSquare      string                 `protobuf:"bytes,4,opt,name=to_square,json=toSquare,proto3" json:"to_square,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveRequest) Reset() {
	*x = MoveRequest{}
	mi := &file_proto_chess_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveRequest) ProtoMessage() {}

func (x *MoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveRequest.ProtoReflect.Descriptor instead.
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{2}
}

func (x *MoveRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *MoveRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *MoveRequest) GetFromSquare() string {
	if x != nil {
		return x.FromSquare
	}
	return ""
}

func (x *MoveRequest) GetToSquare() string {
	if x != nil {
		return x.ToSquare
	}
	return ""
}

type MoveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Fen           string                 `protobuf:"bytes,3,opt,name=fen,proto3" json:"fen,omitempty"`
	NextTurn      string                 `protobuf:"bytes,4,opt,name=next_turn,json=nextTurn,proto3" json:"next_turn,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveResponse) Reset() {
	*x = MoveResponse{}
	mi := &file_proto_chess_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveResponse) ProtoMessage() {}

func (x *MoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveResponse.ProtoReflect.Descriptor instead.
func (*MoveResponse) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{3}
}

func (x *MoveResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MoveResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MoveResponse) GetFen() string {
	if x != nil {
		return x.Fen
	}
	return ""
}

func (x *MoveResponse) GetNextTurn() string {
	if x != nil {
		return x.NextTurn
	}
	return ""
}

type GameStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStateRequest) Reset() {
	*x = GameStateRequest{}
	mi := &file_proto_chess_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateRequest) ProtoMessage() {}

func (x *GameStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateRequest.ProtoReflect.Descriptor instead.
func (*GameStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{4}
}

func (x *GameStateRequest) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

type GameStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fen           string                 `protobuf:"bytes,1,opt,name=fen,proto3" json:"fen,omitempty"`
	CurrentTurn   string                 `protobuf:"bytes,2,opt,name=current_turn,json=currentTurn,proto3" json:"current_turn,omitempty"`
	MoveHistory   []string               `protobuf:"bytes,3,rep,name=move_history,json=moveHistory,proto3" json:"move_history,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStateResponse) Reset() {
	*x = GameStateResponse{}
	mi := &file_proto_chess_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateResponse) ProtoMessage() {}

func (x *GameStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_chess_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateResponse.ProtoReflect.Descriptor instead.
func (*GameStateResponse) Descriptor() ([]byte, []int) {
	return file_proto_chess_proto_rawDescGZIP(), []int{5}
}

func (x *GameStateResponse) GetFen() string {
	if x != nil {
		return x.Fen
	}
	return ""
}

func (x *GameStateResponse) GetCurrentTurn() string {
	if x != nil {
		return x.CurrentTurn
	}
	return ""
}

func (x *GameStateResponse) GetMoveHistory() []string {
	if x != nil {
		return x.MoveHistory
	}
	return nil
}

var File_proto_chess_proto protoreflect.FileDescriptor

const file_proto_chess_proto_rawDesc = "" +
	"\n" +
	"\x11proto/chess.proto\x12\x05chess\"m\n" +
	"\x10StartGameRequest\x12\x1f\n" +
	"\vplayer_name\x18\x01 \x01(\tR\n" +
	"playerName\x128\n" +
	"\ropponent_type\x18\x02 \x01(\x0e2\x13.chess.OpponentTypeR\fopponentType\"\x8e\x01\n" +
	"\x11StartGameResponse\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vopponent_id\x18\x03 \x01(\tR\n" +
	"opponentId\x12\"\n" +
	"\x05color\x18\x04 \x01(\x0e2\f.chess.ColorR\x05color\"\x81\x01\n" +
	"\vMoveRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12\x1f\n" +
	"\vfrom_square\x18\x03 \x01(\tR\n" +
	"fromSquare\x12\x1b\n" +
	"\tto_square\x18\x04 \x01(\tR\btoSquare\"q\n" +
	"\fMoveResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x10\n" +
	"\x03fen\x18\x03 \x01(\tR\x03fen\x12\x1b\n" +
	"\tnext_turn\x18\x04 \x01(\tR\bnextTurn\"+\n" +
	"\x10GameStateRequest\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\"k\n" +
	"\x11GameStateResponse\x12\x10\n" +
	"\x03fen\x18\x01 \x01(\tR\x03fen\x12!\n" +
	"\fcurrent_turn\x18\x02 \x01(\tR\vcurrentTurn\x12!\n" +
	"\fmove_history\x18\x03 \x03(\tR\vmoveHistory*%\n" +
	"\fOpponentType\x12\n" +
	"\n" +
	"\x06PLAYER\x10\x00\x12\t\n" +
	"\x05AGENT\x10\x01*\x1d\n" +
	"\x05Color\x12\t\n" +
	"\x05WHITE\x10\x00\x12\t\n" +
	"\x05BLACK\x10\x012\xc8\x01\n" +
	"\fChessService\x12>\n" +
	"\tStartGame\x12\x17.chess.StartGameRequest\x1a\x18.chess.StartGameResponse\x125\n" +
	"\n" +
	"SubmitMove\x12\x12.chess.MoveRequest\x1a\x13.chess.MoveResponse\x12A\n" +
	"\fGetGameState\x12\x17.chess.GameStateRequest\x1a\x18.chess.GameStateResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_chess_proto_rawDescOnce sync.Once
	file_proto_chess_proto_rawDescData []byte
)

func file_proto_chess_proto_rawDescGZIP() []byte {
	file_proto_chess_proto_rawDescOnce.Do(func() {
		file_proto_chess_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_chess_proto_rawDesc), len(file_proto_chess_proto_rawDesc)))
	})
	return file_proto_chess_proto_rawDescData
}

var file_proto_chess_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_chess_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_chess_proto_goTypes = []any{
	(OpponentType)(0),         // 0: chess.OpponentType
	(Color)(0),                // 1: chess.Color
	(*StartGameRequest)(nil),  // 2: chess.StartGameRequest
	(*StartGameResponse)(nil), // 3: chess.StartGameResponse
	(*MoveRequest)(nil),       // 4: chess.MoveRequest
	(*MoveResponse)(nil),      // 5: chess.MoveResponse
	(*GameStateRequest)(nil),  // 6: chess.GameStateRequest
	(*GameStateResponse)(nil), // 7: chess.GameStateResponse
}
var file_proto_chess_proto_depIdxs = []int32{
	0, // 0: chess.StartGameRequest.opponent_type:type_name -> chess.OpponentType
	1, // 1: chess.StartGameResponse.color:type_name -> chess.Color
	2, // 2: chess.ChessService.StartGame:input_type -> chess.StartGameRequest
	4, // 3: chess.ChessService.SubmitMove:input_type -> chess.MoveRequest
	6, // 4: chess.ChessService.GetGameState:input_type -> chess.GameStateRequest
	3, // 5: chess.ChessService.StartGame:output_type -> chess.StartGameResponse
	5, // 6: chess.ChessService.SubmitMove:output_type -> chess.MoveResponse
	7, // 7: chess.ChessService.GetGameState:output_type -> chess.GameStateResponse
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_chess_proto_init() }
func file_proto_chess_proto_init() {
	if File_proto_chess_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_chess_proto_rawDesc), len(file_proto_chess_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_chess_proto_goTypes,
		DependencyIndexes: file_proto_chess_proto_depIdxs,
		EnumInfos:         file_proto_chess_proto_enumTypes,
		MessageInfos:      file_proto_chess_proto_msgTypes,
	}.Build()
	File_proto_chess_proto = out.File
	file_proto_chess_proto_goTypes = nil
	file_proto_chess_proto_depIdxs = nil
}
